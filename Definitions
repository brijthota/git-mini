# Repository?
*A repository, or Git project, encompasses the entire collection of files and folders associated with a project, along with each fileâ€™s revision history. The file history appears as snapshots in time called commits, and the commits exist as a linked list relationship, and can be organized into multiple lines of development called branches. Because Git is a DVCS, repositories are self-contained units and anyone who owns a copy of the repository can access the entire codebase and its history. Using the command line or other ease-of-use interfaces, a git repository also allows for: interaction with the history, cloning, creating branches, committing, merging, comparing changes across versions of code, and more.*

# Fork

- A fork is a copy of a repository that allows you to freely experiment with changes without affecting the original project.
- A forked repository differs from a clone in that a connection exists between your fork and the original repository itself.
- Your fork acts as a bridge between the original repository and your personal copy where you can contribute back to the original project using Pull Requests.
- Forking a project is as easy as clicking the Fork button in the header of a repository
- Once the process is complete, you'll be taken right to your the forked copy of the project so you can start collaborating!
